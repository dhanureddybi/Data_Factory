{
	"name": "HandleErrorRows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp_error",
						"type": "DatasetReference"
					},
					"name": "errorrows"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "des_emp_errorRows",
						"type": "DatasetReference"
					},
					"name": "GoodRows"
				},
				{
					"dataset": {
						"referenceName": "des_emp_BadRows",
						"type": "DatasetReference"
					},
					"name": "badRows"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as integer,",
				"          emp_name as string,",
				"          join_date as date 'yyyy-MM-dd'",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> errorrows",
				"errorrows split(isNull(join_date),",
				"     disjoint: false) ~> split1@(BadRows, GoodRows)",
				"split1@BadRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          Prop_1 as string,",
				"          Prop_2 as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> GoodRows",
				"split1@GoodRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          Prop_1 as string,",
				"          Prop_2 as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> badRows"
			]
		}
	}
}