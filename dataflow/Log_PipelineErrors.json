{
	"name": "Log_PipelineErrors",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "log",
						"type": "DatasetReference"
					},
					"name": "LogFile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Des_logFile",
						"type": "DatasetReference"
					},
					"name": "DesLogFile"
				}
			],
			"transformations": [
				{
					"name": "AddColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     ADF_Name as string ($ADF_Name),",
				"     PipeLineName as string,",
				"     Status as string,",
				"     RunId as string,",
				"     TriggerName as string,",
				"     Log_File_Name as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LogFile",
				"LogFile derive(ADF_Name = $ADF_Name,",
				"          PipeLineName = $PipeLineName,",
				"          Status = $Status,",
				"          RunId = $RunId,",
				"          TriggerName = $TriggerName) ~> AddColumns",
				"AddColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[($Log_File_Name)],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ADF_name = ADF_Name,",
				"          PipeLineName,",
				"          Status,",
				"          RunId,",
				"          TriggerName",
				"     ),",
				"     partitionBy('hash', 1)) ~> DesLogFile"
			]
		}
	}
}